---
- hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    local_username: user
    git_username: radtkedev
    git_email: mail@radtke.dev
    git_default_branch: master 
  tasks:
    - name: Reduce GRUB timeout
      register: grub_timeout
      lineinfile:
        path: /etc/default/grub
        regexp: "^GRUB_TIMEOUT="
        line: "GRUB_TIMEOUT=1"

    - name: Update GRUB
      when: grub_timeout.changed
      shell: "grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg"

    - name: Configure dnf
      ansible.builtin.copy:
        dest: /etc/dnf.conf
        content: |
          [main]
          gpgcheck=1
          installonly_limit=3
          clean_requirements_on_remove=True
          best=False
          skip_if_unavailable=True
          max_parallel_downloads=10
          deltarpm=true
 
    - name: Enable RPM Fusion Free repository
      dnf:
        name: "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
        state: present

    - name: Enable RPM Fusion Non-Free repository
      dnf:
        name: "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
        state: present

    - name: Update all packages
      dnf:
        name: "*"
        state: latest
        update_cache: true

    - name: Install system utilities
      dnf:
        name: 
          - htop
          - ImageMagick
          - zip
          - net-tools
          - bind-utils
          - pwgen
          - qrencode 
          - traceroute
          - whois
        state: present

    - name: Install desktop applications
      dnf:
        name:
          - chromium
          - telegram-desktop
          - mpv
          - remmina
        state: present

    - name: Install desktop environment
      dnf:
        name:
          - i3
          - i3blocks
          - xorg-x11-server-Xorg
          - xorg-x11-xinit
          - xinput
          - xkill
          - xsel
          - xrdb
          - xclip
          - setxkbmap
          - dmenu
          - picom
          - gxkb
          - neovim
          - arc-theme
          - papirus-icon-theme
        state: present

    - name: Install media tools
      dnf:
        name:
          - volumeicon
          - pavucontrol
          - playerctl
          - ffmpeg
        state: present

    - name: Install disk and networking utilities
      dnf:
        name:
          - NetworkManager
          - NetworkManager-openconnect
          - NetworkManager-openconnect-gnome
          - udiskie
        state: present

    - name: Configure chrony NTP
      register: chrony
      ansible.builtin.copy:
        dest: /etc/chrony.conf
        content: |
          pool time.cloudflare.com iburst nts
          driftfile /var/lib/chrony/drift
          makestep 1.0 3
          rtcsync
          keyfile /etc/chrony.keys
          ntsdumpdir /var/lib/chrony
          leapsectz right/UTC
          logdir /var/log/chrony

    - name: Restart chrony
      when: chrony.changed
      ansible.builtin.service:
        name: chronyd
        state: restarted

    - name: Set up autologin (1/2)
      ansible.builtin.file:
        name: /etc/systemd/system/getty@tty1.service.d
        state: directory

    - name: Set up autologin (2/2)
      ansible.builtin.copy:
        dest: /etc/systemd/system/getty@tty1.service.d/override.conf
        content: |
          [Service]
          ExecStart=
          ExecStart=-/sbin/agetty --skip-login --nonewline --noissue --autologin {{ local_username }} --noclear %I $TERM

    - name: Remove last login information
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.file:
        path: "/home/{{ local_username }}/.hushlogin"
        state: touch

    - name: Setup client ssh folder
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.file:
        path: "/home/{{ local_username }}/.ssh"
        state: directory
        mode: 0700

    - name: Set git username
      become: yes
      become_user: "{{ local_username }}"
      git_config:
        name: user.name
        value: "{{ git_username }}"
        scope: global

    - name: Set git email
      become: yes
      become_user: "{{ local_username }}"
      git_config:
        name: user.email
        value: "{{ git_email }}"
        scope: global

    - name: Setup git default branch
      become: yes
      become_user: "{{ local_username }}"
      git_config:
        name: init.defaultBranch
        value: "{{ git_default_branch }}"
        scope: global

    - name: Set up .bashrc
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.copy:
        src: .bashrc
        dest: /home/{{ local_username }}/.bashrc

    - name: Set up .bash_profile
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.copy:
        src: .bash_profile
        dest: /home/{{ local_username }}/.bash_profile

    - name: Set up .xinitrc
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.copy:
        src: .xinitrc
        dest: /home/{{ local_username }}/.xinitrc

    - name: Set up .Xresources
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.copy:
        src: .Xresources
        dest: /home/{{ local_username }}/.Xresources

    - name: Set up configuration folder
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.file:
        name: /home/{{ local_username }}/.config
        state: directory

    - name: Set up i3 folder
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.file:
        name: /home/{{ local_username }}/.config/i3
        state: directory

    - name: Set up i3 config
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.copy:
        src: .config/i3/config
        dest: /home/{{ local_username }}/.config/i3/config

    - name: Set up i3blocks folder
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.file:
        name: /home/{{ local_username }}/.config/i3blocks
        state: directory

    - name: Set up i3blocks config
      become: yes
      become_user: "{{ local_username }}"
      ansible.builtin.copy:
        src: .config/i3blocks/config
        dest: /home/{{ local_username }}/.config/i3blocks/config


